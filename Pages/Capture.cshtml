@page
@model ProBono.Pages.CaptureModel
<div style="background-color:aqua; padding:10px;">
    <p>We are able to Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.</p>
    <p>In order for use to lorem ipsum dolor sit amet, consectetur adipiscing elit, you will need to fill out the information below.</p>
    <form method="post" asp-page="/Capture">
        <!-- Name Field (Required) -->
        <div class="mb-3">
            <label for="name" class="form-label">Name <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="name" name="name" required>
        </div>

        <div class="row">
            <!-- First Phone Field -->
            <div class="col-md-6 mb-3">
                <label for="phone1" class="form-label">Phone Number <span class="text-danger">*</span></label>
                <input type="tel" class="form-control" id="phone1" name="phone1" required>
                <div class="invalid-feedback">Phone numbers do not match.</div>
            </div>

            <!-- Confirm Phone Field -->
            <div class="col-md-6 mb-3">
                <label for="phone2" class="form-label">Confirm Phone Number <span class="text-danger">*</span></label>
                <input type="tel" class="form-control" id="phone2" name="phone2" required>
                <div class="invalid-feedback">Phone numbers do not match.</div>
            </div>
        </div>

        <div class="row">
            <!-- Email Field -->
            <div class="col-md-6 mb-3">
                <label for="email1" class="form-label">Email (Optional)</label>
                <input type="email" class="form-control" id="email1" name="email1">
                <div class="invalid-feedback">Emails do not match.</div>
            </div>

            <!-- Confirm Email Field -->
            <div class="col-md-6 mb-3">
                <label for="email2" class="form-label">Confirm Email (Optional)</label>
                <input type="email" class="form-control" id="email2" name="email2">
                <div class="invalid-feedback">Emails do not match.</div>
            </div>
        </div>

        <!-- Radio Button Selection -->
        <div class="mb-3">
            <label class="form-label">Select an Option:</label>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="selection" id="application" value="application" checked>
                <label class="form-check-label" for="application">Application</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="selection" id="recertification" value="recertification" required>
                <label class="form-check-label" for="recertification">Recertification</label>
            </div>
        </div>

        <!-- Date Field -->
        <div class="mb-3">
            <label for="formdate" class="form-label">When did you submit your application/recertification?</label>
            <input type="date" class="form-control" id="formdate" name="formdate">
        </div>

        <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur venenatis, elit eget aliquam cursus, ante libero vehicula orci, vel tincidunt purus magna a odio. Integer in risus at augue tempus facilisis non ac urna. Vivamus feugiat libero a lorem mollis, ac vestibulum justo tempus. Nullam sollicitudin volutpat neque, non gravida erat tempor at. Sed vitae viverra justo, at placerat sem.
        </p>
        <p>
            Proin sit amet turpis ac risus posuere elementum et et leo. Suspendisse potenti. Sed non eros id ipsum dictum gravida nec a lectus. Ut consectetur orci turpis, sed volutpat eros pretium a. Fusce ac sapien non lorem tincidunt faucibus at at turpis. Integer non metus ut ante hendrerit elementum. Cras tristique, lectus id auctor aliquam, orci nulla sodales felis, eget vestibulum mi nulla sit amet erat.
        </p>
        <!-- Radio Button Selection -->
        <div class="mb-3">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="documentSelectionGroup" id="signed" value="signed" checked>
                <label class="form-check-label" for="signed">
                    Check this box if you want to sign a Lorem ipsum dolor DOCUMENT
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="documentSelectionGroup" id="notsigned" value="notsigned" required>
                <label class="form-check-label" for="notsigned">
                    Check this box if you do <b>NOT</b> want to sign a Lorem ipsum dolor DOCUMENT. If you check this box, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                </label>
            </div>
        </div>

        <p class="mt-2">HERE IS THE Lorem ipsum dolor DOCUMENT (<a href="#">https://linktosomedocument</a>) PLEASE DOWNLOAD AND EMAIL BACK TO (xxxxx@xxx.xxx)</p>

        <div style="border: 2px solid black; width: 100%; font-weight: bold;">
            if you need help with this form due to a disability, or you do not have an email address and would like to talk to a member of our team by phone, please <a href="javascript:void(0)" id="openPopup">click here</a>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-primary mt-3">Submit</button>
    </form>
</div>

<div id="myPopup" class="popup">
    <div class="popup-content">
        <p>Text (888) 888-8888 with your name and phone number, and someone will call you between the hours of 9 am EST and 8 pm EST.</p>
        <button class="close-btn" id="closePopup">Close</button>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const formDateInput = document.getElementById("formdate");
    if (formDateInput) {
        const today = new Date();
        const maxDate = today.toISOString().split('T')[0];

        const minDateObj = new Date();
        minDateObj.setDate(today.getDate() - 30);
        const minDate = minDateObj.toISOString().split('T')[0];

        formDateInput.max = maxDate;
        formDateInput.min = minDate;
    }

    // Popup handlers
    const popup = document.getElementById('myPopup');
    document.getElementById('openPopup')?.addEventListener('click', () => {
        if (popup) popup.style.display = 'flex';
    });
    document.getElementById('closePopup')?.addEventListener('click', () => {
        if (popup) popup.style.display = 'none';
    });
    window.addEventListener('click', event => {
        if (event.target === popup) popup.style.display = 'none';
    });

    // Form validation
    const form = document.querySelector('form');
    const phone1 = document.getElementById('phone1');
    const phone2 = document.getElementById('phone2');
    const email1 = document.getElementById('email1');
    const email2 = document.getElementById('email2');

    // Helper to set error message
    const setInvalid = (input, message) => {
        input.classList.add('is-invalid');

        let feedback = input.nextElementSibling;
        while (feedback && !feedback.classList.contains('invalid-feedback')) {
            feedback = feedback.nextElementSibling;
        }

        if (feedback) {
            feedback.textContent = message;
            feedback.style.display = 'block';
        }
    };

    const clearInvalid = (input) => {
        input.classList.remove('is-invalid');

        let feedback = input.nextElementSibling;
        while (feedback && !feedback.classList.contains('invalid-feedback')) {
            feedback = feedback.nextElementSibling;
        }

        if (feedback) {
            feedback.textContent = '';
            feedback.style.display = 'none';
        }
    };

    if (form) {
        form.addEventListener('submit', function (e) {
            let valid = true;

            // PHONE VALIDATION
            const phoneVal1 = phone1.value.trim();
            const phoneVal2 = phone2.value.trim();

            if (phoneVal1.length < 10) {
                setInvalid(phone1, 'Phone number must be at least 10 characters.');
                valid = false;
            } else {
                clearInvalid(phone1);
            }

            if (phoneVal1 !== phoneVal2) {
                setInvalid(phone2, 'Phone numbers do not match.');
                valid = false;
            } else {
                clearInvalid(phone2);
            }

            // EMAIL VALIDATION (optional but must match + be valid if entered)
            const emailVal1 = email1.value.trim();
            const emailVal2 = email2.value.trim();

            if (emailVal1 || emailVal2) {
                if (!emailVal1.includes('@@') || !emailVal1.includes('.') || emailVal1.startsWith('@@') || emailVal1.endsWith('@@')) {
                    setInvalid(email1, 'Enter a valid email address.');
                    valid = false;
                } else {
                    clearInvalid(email1);
                }

                if (emailVal1 !== emailVal2) {
                    setInvalid(email2, 'Email addresses do not match.');
                    valid = false;
                } else {
                    clearInvalid(email2);
                }
            } else {
                clearInvalid(email1);
                clearInvalid(email2);
            }

            if (!valid) {
                e.preventDefault();
                e.stopPropagation();
            }
        });

        // Live validation - phone match
        phone2?.addEventListener('input', () => {
            if (phone1.value !== phone2.value) {
                setInvalid(phone2, 'Phone numbers do not match.');
            } else {
                clearInvalid(phone2);
            }
        });

        // Live validation - email match
        email2?.addEventListener('input', () => {
            if (email1.value !== email2.value) {
                setInvalid(email2, 'Email addresses do not match.');
            } else {
                clearInvalid(email2);
            }
        });
    }
});
</script>


<style>
    /* Style the popup container */
    .popup {
        display: none;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Black background with transparency */
        justify-content: center;
        align-items: center;
    }

    /* Style the content of the popup */
    .popup-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        max-width: 400px;
        margin: auto;
    }

    /* Close button style */
    .close-btn {
        background-color: red;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 10px;
    }
</style>